import { VariantProps } from 'class-variance-authority';
import React, { HTMLProps } from 'react';
import { ClassValue } from 'clsx';
export declare function cn(...inputs: ClassValue[]): string;
declare const tableVariants: (props?: ({
    variant?: "default" | "bg" | "border" | null | undefined;
    padding?: "all" | "left" | "right" | null | undefined;
    alignmentment?: "left" | "center" | "right" | null | undefined;
} & import("class-variance-authority/dist/types").ClassProp) | undefined) => string;
declare const tableHeadVariants: (props?: ({
    variant?: "default" | "bg" | "border" | null | undefined;
    alignment?: "left" | "center" | "right" | null | undefined;
} & import("class-variance-authority/dist/types").ClassProp) | undefined) => string;
declare const tableBodyVariants: (props?: ({
    variant?: "default" | "bg" | "border" | null | undefined;
    alignment?: "left" | "center" | "right" | null | undefined;
} & import("class-variance-authority/dist/types").ClassProp) | undefined) => string;
declare const tdVariants: (props?: ({
    variant?: "default" | "bg" | "border" | null | undefined;
    padding?: "all" | "left" | "right" | null | undefined;
} & import("class-variance-authority/dist/types").ClassProp) | undefined) => string;
declare const thVariants: (props?: ({
    variant?: "default" | "bg" | "border" | null | undefined;
    padding?: "all" | "left" | "right" | null | undefined;
} & import("class-variance-authority/dist/types").ClassProp) | undefined) => string;
declare const trVariants: (props?: ({
    variant?: "default" | "bg" | "border" | null | undefined;
    padding?: "all" | "left" | "right" | null | undefined;
} & import("class-variance-authority/dist/types").ClassProp) | undefined) => string;
export interface TableProps extends HTMLProps<HTMLTableElement>, VariantProps<typeof tableVariants> {
    children: React.ReactNode;
    className?: string;
}
export declare const Table: React.FC<TableProps>;
export interface TableHeadProps extends HTMLProps<HTMLTableSectionElement>, VariantProps<typeof tableHeadVariants> {
    children: React.ReactNode | null;
    className?: string;
}
export declare const TableHead: React.FC<TableHeadProps>;
export interface TableBodyProps extends HTMLProps<HTMLTableSectionElement>, VariantProps<typeof tableBodyVariants> {
    children: React.ReactNode | null;
    className?: string;
}
export declare const TableBody: React.FC<TableBodyProps>;
export interface tdProps extends HTMLProps<HTMLTableCellElement>, VariantProps<typeof tdVariants> {
    children: React.ReactNode | null;
    className?: string;
}
export declare const Td: React.FC<tdProps>;
export interface thProps extends HTMLProps<HTMLTableCellElement>, VariantProps<typeof thVariants> {
    children: React.ReactNode | null;
    className?: string;
}
export declare const Th: React.FC<thProps>;
export interface trProps extends HTMLProps<HTMLTableRowElement>, VariantProps<typeof trVariants> {
    children: React.ReactNode | null;
    className?: string;
}
export declare const Tr: React.FC<trProps>;
declare const _default: {
    Table: React.FC<TableProps>;
    TableHead: React.FC<TableHeadProps>;
    TableBody: React.FC<TableBodyProps>;
    Td: React.FC<tdProps>;
    Th: React.FC<thProps>;
    Tr: React.FC<trProps>;
};
export default _default;
